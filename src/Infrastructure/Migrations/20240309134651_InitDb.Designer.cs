// <auto-generated />
using System;
using Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240309134651_InitDb")]
    partial class InitDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Core.Domain.Entities.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Client")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("TourId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TourId");

                    b.ToTable("Booking");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookingDate = new DateTime(2024, 3, 9, 10, 46, 51, 224, DateTimeKind.Local).AddTicks(2008),
                            Client = "Cliente1",
                            TourId = 1
                        },
                        new
                        {
                            Id = 2,
                            BookingDate = new DateTime(2024, 3, 10, 10, 46, 51, 224, DateTimeKind.Local).AddTicks(2016),
                            Client = "Cliente2",
                            TourId = 2
                        },
                        new
                        {
                            Id = 3,
                            BookingDate = new DateTime(2024, 3, 11, 10, 46, 51, 224, DateTimeKind.Local).AddTicks(2021),
                            Client = "Cliente3",
                            TourId = 3
                        },
                        new
                        {
                            Id = 4,
                            BookingDate = new DateTime(2024, 3, 11, 10, 46, 51, 224, DateTimeKind.Local).AddTicks(2022),
                            Client = "Cliente4",
                            TourId = 3
                        });
                });

            modelBuilder.Entity("Core.Domain.Entities.Tour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Destiny")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Tour");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Destiny = "City A",
                            EndDate = new DateTime(2024, 3, 23, 10, 46, 51, 224, DateTimeKind.Local).AddTicks(2640),
                            Name = "Tour A",
                            Price = 1000m,
                            StartDate = new DateTime(2024, 3, 16, 10, 46, 51, 224, DateTimeKind.Local).AddTicks(2638)
                        },
                        new
                        {
                            Id = 2,
                            Destiny = "City B",
                            EndDate = new DateTime(2024, 4, 6, 10, 46, 51, 224, DateTimeKind.Local).AddTicks(2644),
                            Name = "Tour B",
                            Price = 1200m,
                            StartDate = new DateTime(2024, 3, 30, 10, 46, 51, 224, DateTimeKind.Local).AddTicks(2643)
                        },
                        new
                        {
                            Id = 3,
                            Destiny = "City C",
                            EndDate = new DateTime(2024, 4, 15, 10, 46, 51, 224, DateTimeKind.Local).AddTicks(2645),
                            Name = "Tour C",
                            Price = 800.25m,
                            StartDate = new DateTime(2024, 4, 8, 10, 46, 51, 224, DateTimeKind.Local).AddTicks(2645)
                        });
                });

            modelBuilder.Entity("Core.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user1@gmail.com",
                            Name = "User 1"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 7, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user2@gmail.com",
                            Name = "User 2"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 7, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user3@gmail.com",
                            Name = "User 3"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 7, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user4@gmail.com",
                            Name = "User 4"
                        });
                });

            modelBuilder.Entity("Core.Domain.Entities.Booking", b =>
                {
                    b.HasOne("Core.Domain.Entities.Tour", "Tour")
                        .WithMany("Bookings")
                        .HasForeignKey("TourId")
                        .IsRequired()
                        .HasConstraintName("booking_tourId_fk");

                    b.Navigation("Tour");
                });

            modelBuilder.Entity("Core.Domain.Entities.Tour", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
